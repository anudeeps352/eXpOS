//Memory manager Module

alias functionNum R1; //retriving the function number

if(functionNum==1) then  //getfreepage
	print "entering mem mang func 1";
	[SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]+1; //Incrementing WAIT_MEM_COUNT

	while([SYSTEM_STATUS_TABLE+2]==0) do //While MEM_FREE_COUNT is 0(i.e. no free memory available)
		[PROCESS_TABLE+16*[SYSTEM_STATUS_TABLE+1]+4]=WAIT_MEM;

		backup;
		call MOD_5;
		restore;
	endwhile;

    [SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]-1; //Decrementing WAIT_MEM_COUNT
	[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1; //Decrementing MEM_FREE_COUNT
	
	alias i R3;
	i=0;
	while(i<128) do
		if([MEMORY_FREE_LIST+i]==0) then
			[MEMORY_FREE_LIST+i]=1;
			break;
		endif;
		i=i+1;
	endwhile;

	R0=i;
	breakpoint;
	print "exitiing mem mang func 1";
	return;

endif;  


if(functionNum==2) then //releasepage
	print "enterinmem2";
	[MEMORY_FREE_LIST+R2]=[MEMORY_FREE_LIST+R2]-1;

	//Increment MEM_FREE_COUNT if no process is using that page
	if([MEMORY_FREE_LIST+R2]==0) then
		[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1; 
	endif;
	breakpoint;
	print "exitingmem2";
	return;
endif;

if(functionNum==5)then
	alias i R4;
	print "enteringmem5";
	i=0;
	while(i < 160) do
		if(([DISK_MAP_TABLE + i] == R2) && (([PAGE_TABLE_BASE + (i/10) * 20 + (i%10 * 2) + 1] == "1110") || ([PAGE_TABLE_BASE + (i/10) * 20 + (i%10 * 2) + 1] == "0110") || ([PAGE_TABLE_BASE + (i/10) * 20 + (i%10 * 2) + 1] == "0100"))) then
			R0 = [PAGE_TABLE_BASE + (i/10) * 20 + (i%10 * 2)];
			[MEMORY_FREE_LIST + R0] = [MEMORY_FREE_LIST + R0] + 1;
			return;
		endif;
		i = i + 1;
	endwhile;


	multipush(R1,R2,R3,R4,R5);
	R1 = 1;
	call MOD_2;
	multipop(R1,R2,R3,R4,R5);
	multipush(R0,R1,R2,R3,R4,R5);
	R1 = 2;
	R4 = R2;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	R3 = R0;
	call MOD_4;
	multipop(R0,R1,R2,R3,R4,R5);
	breakpoint;
	print "exitingmem5";
	return;

endif;

if(functionNum == 4) then
	print "enteringmem4";
	[DISK_FREE_LIST + R2] = [DISK_FREE_LIST + R2] - 1;
	print "enteringmem4";
	return;
endif;
