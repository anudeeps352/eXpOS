//init

loadi(65,7);
loadi(66,8);

// INT10

loadi(22,35);
loadi(23,36);

//INT 9

loadi(20,33);
loadi(21,34);

// INT7

loadi(16,29);
loadi(17,30);

//load mod_0 RESOURCE_MANAGER
loadi(40, 53);
loadi(41, 54);

//load mod_4 DEVICE_MANAGER
loadi(48, 61);
loadi(49, 62);	

//load mod_1 PROCESS_MANAGER
loadi(42,55);
loadi(43,56);

//load mod_2 MEMORY_MANAGER
loadi(44,57);
loadi(45,58);

//load Inode Table Copy
loadi(59,3);
loadi(60,4);

// Exception Handler

loadi(2, 15);
loadi(3, 16);

//disk Interrupt
loadi(6,19);
loadi(7,20);

//Loading Disk Free List
loadi(61,2);

// Library Code

loadi(63,13);
loadi(64,14);

// Timer Interrupt

loadi(4, 17);
loadi(5, 18);

loadi(16,29); //write int
loadi(17,30);

//load module_5 scheduler
loadi(50,63);
loadi(51,64);

// INT 6

loadi(14,27);
loadi(15,28);

// Console Interrupt

loadi(8,21);
loadi(9,22);

// MODULE 0

loadi(40,53);
loadi(41,54);

// MODULE 4

loadi(61,48);
loadi(62,49);



// PAGE TABLE FOR INIT pid=1

PTBR = PAGE_TABLE_BASE+20;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";



// PROCESS TABLE FOR INIT 

[PROCESS_TABLE+16]=0;
[PROCESS_TABLE+16 + 11] = 80;
[PROCESS_TABLE+16 + 1] = 1;
[PROCESS_TABLE+16 + 4] = CREATED;
[PROCESS_TABLE+16 + 13] = 8*512;
[PROCESS_TABLE+16 + 12] = 0;
[PROCESS_TABLE+16 + 14] = PAGE_TABLE_BASE+20;
[PROCESS_TABLE+16 + 15] = 10;

[76*512] = [65 * 512 + 1];


//Library

[PTBR+10]=-1;


alias j R0;
j = 2;
while(j<16) do
[PROCESS_TABLE+16*j+4] = TERMINATED;
j = j+1;
endwhile;

//Setting memory free list
alias i R0;
i=0;
while(i<=82) do
	[MEMORY_FREE_LIST+i]=1;
	i=i+1;
endwhile;
i=83;
while(i<=127) do
	[MEMORY_FREE_LIST+i]=0;
	i=i+1;
endwhile;

//Initialising WAIT_MEM_COUNT to 0
[SYSTEM_STATUS_TABLE+3]=0;

//Initialising MEM_FREE_COUNT to 45(no of free pages)
[SYSTEM_STATUS_TABLE+2]=45;
[DISK_STATUS_TABLE]=0;

//initialise disk map entries

[DISK_MAP_TABLE + 10 + 0] = -1;
[DISK_MAP_TABLE + 10 + 1] = -1;
[DISK_MAP_TABLE + 10 + 2] = -1;
[DISK_MAP_TABLE + 10 + 3] = -1;
[DISK_MAP_TABLE + 10 + 4] = 7;
[DISK_MAP_TABLE + 10 + 5] = 8;
[DISK_MAP_TABLE + 10 + 6] = -1;
[DISK_MAP_TABLE + 10 + 7] = -1;
[DISK_MAP_TABLE + 10 + 8] = -1;
[DISK_MAP_TABLE + 10 + 9] = -1;

[TERMINAL_STATUS_TABLE + 0]=0;
return;